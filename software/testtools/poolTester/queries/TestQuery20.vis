#**********************************************************
#**********************************************************
#		Test: relop
#
#  Full Test of Relational Operators
#
#  Test following as Recipients and Parameters
#      Integer   Double    Float
#      Object    Date      String    
#      NA        TRUE      FALSE
#
#  Test using
#     simple scalar relop simple scalar
#     extend scalar relop simple scalar
#     extend scalar relop extend scalar
#     simple list do: [ ^self relop simple scalar ]
#     extend list do: [ ^self relop simple scalar ] 
#     extend list do: [ ^self relop extend scalar ] 
#  
#  6/26/92   lcn
#**********************************************************
#**********************************************************


newLine print; "Beginning file: relop.S ..." printNL;


"
**********
* Integer
**********
" printNL ;

"...  = " printNL ; 
"     Simple Scalar" printNL ;
(1 = 2) printNL ;
(2 = 1) printNL ;
(1 = 1) printNL ;
(1 = 1.0) printNL ;
(1 = 1.0 asFloat) printNL ;
(1 = Object) printNL ;
(1 = ^today) printNL ;
(1 = "string") printNL ;
(1 = NA) printNL ;
(1 = TRUE) printNL ;
(1 = FALSE) printNL ;

"     Scalar1 eb" printNL ;
(1 extendBy: [ ] . = 2) printNL ;
(2 extendBy: [ ] . = 1) printNL ;
(1 extendBy: [ ] . = 1) printNL ;
(1 extendBy: [ ] . = 1.0) printNL ;
(1 extendBy: [ ] . = 1.0 asFloat) printNL ;
(1 extendBy: [ ] . = Object) printNL ;
(1 extendBy: [ ] . = ^today) printNL ;
(1 extendBy: [ ] . = "string") printNL ;
(1 extendBy: [ ] . = NA) printNL ;
(1 extendBy: [ ] . = TRUE) printNL ;
(1 extendBy: [ ] . = FALSE) printNL ;

"    Scalar double eb" printNL ;
(1 extendBy: [ ] . = (2 extendBy: [ ] )) printNL ;
(2 extendBy: [ ] . = (1 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . = (1 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . = (1.0 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . = (1.0 asFloat extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . = (Object extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . = (^today extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . = ("string" extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . = (NA extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . = (TRUE extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . = (FALSE extendBy: [ ] )) printNL ;

!list <- 1,2,3,-3,0,10 ;

"     List basic:  2,1,1,object,date,string,na,true,false" printNL ;
list do: [ ^self print ; (^self = 2 ) printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self = ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self = "1") printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = 2 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = "1") printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( 2 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( 1.0 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( 1.0 asFloat extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( ^global Object extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( ^today extendBy: [])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( "1" extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( NA extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( TRUE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( FALSE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;

"...  != " printNL ; 
"     Simple Scalar" printNL ;
(1 != 2) printNL ;
(2 != 1) printNL ;
(1 != 1) printNL ;
(1 != 1.0) printNL ;
(1 != 1.0 asFloat) printNL ;
(1 != Object) printNL ;
(1 != ^today) printNL ;
(1 != "string") printNL ;
(1 != NA) printNL ;
(1 != TRUE) printNL ;
(1 != FALSE) printNL ;

"     Simple1 eB" printNL ;
(1 extendBy: [ ] . != 2) printNL ;
(2 extendBy: [ ] . != 1) printNL ;
(1 extendBy: [ ] . != 1) printNL ;
(1 extendBy: [ ] . != 1.0) printNL ;
(1 extendBy: [ ] . != 1.0 asFloat) printNL ;
(1 extendBy: [ ] . != Object) printNL ;
(1 extendBy: [ ] . != ^today) printNL ;
(1 extendBy: [ ] . != "string") printNL ;
(1 extendBy: [ ] . != NA) printNL ;
(1 extendBy: [ ] . != TRUE) printNL ;
(1 extendBy: [ ] . != FALSE) printNL ;

"    Scalar double eB" printNL ;
(1 extendBy: [ ] . != (2 extendBy: [ ] )) printNL ;
(2 extendBy: [ ] . != (1 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . != (1 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . != (1.0 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . != (1.0 asFloat extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . != (Object extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . != (^today extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . != ("string" extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . != (NA extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . != (TRUE extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . != (FALSE extendBy: [ ] )) printNL ;

!list <- 1,2,3,-3,0,10 ;

"     List basic:  2,1,1,object,date,string,na,true,false" printNL ;
list do: [ ^self print ; (^self != 2 ) printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self != ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self != "1") printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != 2 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != "1") printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( 2 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( 1.0 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( 1.0 asFloat extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( ^global Object extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( ^today extendBy: [])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( "1" extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( NA extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( TRUE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( FALSE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;

"...  <= " printNL ; 
"     Simple Scalar" printNL ;
(1 <= 2) printNL ;
(2 <= 1) printNL ;
(1 <= 1) printNL ;
(1 <= 1.0) printNL ;
(1 <= 1.0 asFloat) printNL ;
(1 <= Object) printNL ;
(1 <= ^today) printNL ;
(1 <= "string") printNL ;
(1 <= NA) printNL ;
(1 <= TRUE) printNL ;
(1 <= FALSE) printNL ;

"     Simple1 eB:" printNL ;
(1 extendBy: [ ] . <= 2) printNL ;
(2 extendBy: [ ] . <= 1) printNL ;
(1 extendBy: [ ] . <= 1) printNL ;
(1 extendBy: [ ] . <= 1.0) printNL ;
(1 extendBy: [ ] . <= 1.0 asFloat) printNL ;
(1 extendBy: [ ] . <= Object) printNL ;
(1 extendBy: [ ] . <= ^today) printNL ;
(1 extendBy: [ ] . <= "string") printNL ;
(1 extendBy: [ ] . <= NA) printNL ;
(1 extendBy: [ ] . <= TRUE) printNL ;
(1 extendBy: [ ] . <= FALSE) printNL ;

"    Scalar double eb: " printNL ;
(1 extendBy: [ ] . <= (2 extendBy: [ ] )) printNL ;
(2 extendBy: [ ] . <= (1 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . <= (1 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . <= (1.0 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . <= (1.0 asFloat extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . <= (Object extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . <= (^today extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . <= ("string" extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . <= (NA extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . <= (TRUE extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . <= (FALSE extendBy: [ ] )) printNL ;

!list <- 1,2,3,-3,0,10 ;

"     List basic:  2,1,1,object,date,string,na,true,false" printNL ;
list do: [ ^self print ; (^self <= 2 ) printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self <= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self <= "1") printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= 2 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= "1") printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( 2 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( 1.0 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( 1.0 asFloat extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( ^global Object extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( ^today extendBy: [])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( "1" extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( NA extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( TRUE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( FALSE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;

"...  < " printNL ; 
"     Simple Scalar" printNL ;
(1 < 2) printNL ;
(2 < 1) printNL ;
(1 < 1) printNL ;
(1 < 1.0) printNL ;
(1 < 1.0 asFloat) printNL ;
(1 < Object) printNL ;
(1 < ^today) printNL ;
(1 < "string") printNL ;
(1 < NA) printNL ;
(1 < TRUE) printNL ;
(1 < FALSE) printNL ;

"     Simple1 eB:" printNL ;
(1 extendBy: [ ] . < 2) printNL ;
(2 extendBy: [ ] . < 1) printNL ;
(1 extendBy: [ ] . < 1) printNL ;
(1 extendBy: [ ] . < 1.0) printNL ;
(1 extendBy: [ ] . < 1.0 asFloat) printNL ;
(1 extendBy: [ ] . < Object) printNL ;
(1 extendBy: [ ] . < ^today) printNL ;
(1 extendBy: [ ] . < "string") printNL ;
(1 extendBy: [ ] . < NA) printNL ;
(1 extendBy: [ ] . < TRUE) printNL ;
(1 extendBy: [ ] . < FALSE) printNL ;

"    Scalar double eb: " printNL ;
(1 extendBy: [ ] . < (2 extendBy: [ ] )) printNL ;
(2 extendBy: [ ] . < (1 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . < (1 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . < (1.0 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . < (1.0 asFloat extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . < (Object extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . < (^today extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . < ("string" extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . < (NA extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . < (TRUE extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . < (FALSE extendBy: [ ] )) printNL ;

!list <- 1,2,3,-3,0,10 ;

"     List basic:  2,1,1,object,date,string,na,true,false" printNL ;
list do: [ ^self print ; (^self < 2 ) printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self < ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self < "1") printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < 2 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < "1") printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( 2 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( 1.0 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( 1.0 asFloat extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( ^global Object extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( ^today extendBy: [])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( "1" extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( NA extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( TRUE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( FALSE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;

"...  >= " printNL ; 
"     Simple Scalar" printNL ;
(1 >= 2) printNL ;
(2 >= 1) printNL ;
(1 >= 1) printNL ;
(1 >= 1.0) printNL ;
(1 >= 1.0 asFloat) printNL ;
(1 >= Object) printNL ;
(1 >= ^today) printNL ;
(1 >= "string") printNL ;
(1 >= NA) printNL ;
(1 >= TRUE) printNL ;
(1 >= FALSE) printNL ;

"     Simple1 eB:" printNL ;
(1 extendBy: [ ] . >= 2) printNL ;
(2 extendBy: [ ] . >= 1) printNL ;
(1 extendBy: [ ] . >= 1) printNL ;
(1 extendBy: [ ] . >= 1.0) printNL ;
(1 extendBy: [ ] . >= 1.0 asFloat) printNL ;
(1 extendBy: [ ] . >= Object) printNL ;
(1 extendBy: [ ] . >= ^today) printNL ;
(1 extendBy: [ ] . >= "string") printNL ;
(1 extendBy: [ ] . >= NA) printNL ;
(1 extendBy: [ ] . >= TRUE) printNL ;
(1 extendBy: [ ] . >= FALSE) printNL ;

"    Scalar double eb: " printNL ;
(1 extendBy: [ ] . >= (2 extendBy: [ ] )) printNL ;
(2 extendBy: [ ] . >= (1 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . >= (1 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . >= (1.0 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . >= (1.0 asFloat extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . >= (Object extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . >= (^today extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . >= ("string" extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . >= (NA extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . >= (TRUE extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . >= (FALSE extendBy: [ ] )) printNL ;

!list <- 1,2,3,-3,0,10 ;

"     List basic:  2,1,1,object,date,string,na,true,false" printNL ;
list do: [ ^self print ; (^self >= 2 ) printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self >= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self >= "1") printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= 2 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= "1") printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( 2 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( 1.0 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( 1.0 asFloat extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( ^global Object extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( ^today extendBy: [])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( "1" extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( NA extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( TRUE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( FALSE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;

"...  > " printNL ; 
"     Simple Scalar" printNL ;
(1 > 2) printNL ;
(2 > 1) printNL ;
(1 > 1) printNL ;
(1 > 1.0) printNL ;
(1 > 1.0 asFloat) printNL ;
(1 > Object) printNL ;
(1 > ^today) printNL ;
(1 > "string") printNL ;
(1 > NA) printNL ;
(1 > TRUE) printNL ;
(1 > FALSE) printNL ;

"     Simple1 eB:" printNL ;
(1 extendBy: [ ] . > 2) printNL ;
(2 extendBy: [ ] . > 1) printNL ;
(1 extendBy: [ ] . > 1) printNL ;
(1 extendBy: [ ] . > 1.0) printNL ;
(1 extendBy: [ ] . > 1.0 asFloat) printNL ;
(1 extendBy: [ ] . > Object) printNL ;
(1 extendBy: [ ] . > ^today) printNL ;
(1 extendBy: [ ] . > "string") printNL ;
(1 extendBy: [ ] . > NA) printNL ;
(1 extendBy: [ ] . > TRUE) printNL ;
(1 extendBy: [ ] . > FALSE) printNL ;

"    Scalar double eb: " printNL ;
(1 extendBy: [ ] . > (2 extendBy: [ ] )) printNL ;
(2 extendBy: [ ] . > (1 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . > (1 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . > (1.0 extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . > (1.0 asFloat extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . > (Object extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . > (^today extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . > ("string" extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . > (NA extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . > (TRUE extendBy: [ ] )) printNL ;
(1 extendBy: [ ] . > (FALSE extendBy: [ ] )) printNL ;

!list <- 1,2,3,-3,0,10 ;

"     List basic:  2,1,1,object,date,string,na,true,false" printNL ;
list do: [ ^self print ; (^self > 2 ) printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self > ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self > "1") printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > 2 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > "1") printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( 2 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( 1.0 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( 1.0 asFloat extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( ^global Object extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( ^today extendBy: [])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( "1" extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( NA extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( TRUE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( FALSE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;

newPage print ; 
"
**********
* Double
**********
" printNL ;

"...  = " printNL ; 
"     Simple Scalar" printNL ;
(1.0 = 2) printNL ;
(2.0 = 1) printNL ;
(1.0 = 1) printNL ;
(1.0 = 1.0) printNL ;
(1.0 = 1.0 asFloat) printNL ;
(1.0 = Object) printNL ;
(1.0 = ^today) printNL ;
(1.0 = "string") printNL ;
(1.0 = NA) printNL ;
(1.0 = TRUE) printNL ;
(1.0 = FALSE) printNL ;

"     Scalar1 eb" printNL ;
(1.0 extendBy: [ ] . = 2) printNL ;
(2.0 extendBy: [ ] . = 1) printNL ;
(1.0 extendBy: [ ] . = 1) printNL ;
(1.0 extendBy: [ ] . = 1.0) printNL ;
(1.0 extendBy: [ ] . = 1.0 asFloat) printNL ;
(1.0 extendBy: [ ] . = Object) printNL ;
(1.0 extendBy: [ ] . = ^today) printNL ;
(1.0 extendBy: [ ] . = "string") printNL ;
(1.0 extendBy: [ ] . = NA) printNL ;
(1.0 extendBy: [ ] . = TRUE) printNL ;
(1.0 extendBy: [ ] . = FALSE) printNL ;

"    Scalar double eb" printNL ;
(1.0 extendBy: [ ] . = (2 extendBy: [ ] )) printNL ;
(2.0 extendBy: [ ] . = (1 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . = (1 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . = (1.0 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . = (1.0 asFloat extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . = (Object extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . = (^today extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . = ("string" extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . = (NA extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . = (TRUE extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . = (FALSE extendBy: [ ] )) printNL ;

!list <- 1.0,2.0,3.3,-3.0,0.0,10.0 ;

"     List basic:  2,1,1,object,date,string,na,true,false" printNL ;
list do: [ ^self print ; (^self = 2 ) printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self = ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self = "1") printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = 2 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = "1") printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( 2 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( 1.0 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( 1.0 asFloat extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( ^global Object extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( ^today extendBy: [])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( "1" extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( NA extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( TRUE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self = ( FALSE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;

"...  != " printNL ; 
"     Simple Scalar" printNL ;
(1.0 != 2) printNL ;
(2.0 != 1) printNL ;
(1.0 != 1) printNL ;
(1.0 != 1.0) printNL ;
(1.0 != 1.0 asFloat) printNL ;
(1.0 != Object) printNL ;
(1.0 != ^today) printNL ;
(1.0 != "string") printNL ;
(1.0 != NA) printNL ;
(1.0 != TRUE) printNL ;
(1.0 != FALSE) printNL ;

"     Simple1 eB" printNL ;
(1.0 extendBy: [ ] . != 2) printNL ;
(2.0 extendBy: [ ] . != 1) printNL ;
(1.0 extendBy: [ ] . != 1) printNL ;
(1.0 extendBy: [ ] . != 1.0) printNL ;
(1.0 extendBy: [ ] . != 1.0 asFloat) printNL ;
(1.0 extendBy: [ ] . != Object) printNL ;
(1.0 extendBy: [ ] . != ^today) printNL ;
(1.0 extendBy: [ ] . != "string") printNL ;
(1.0 extendBy: [ ] . != NA) printNL ;
(1.0 extendBy: [ ] . != TRUE) printNL ;
(1.0 extendBy: [ ] . != FALSE) printNL ;

"    Scalar double eB" printNL ;
(1.0 extendBy: [ ] . != (2 extendBy: [ ] )) printNL ;
(2.0 extendBy: [ ] . != (1 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . != (1 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . != (1.0 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . != (1.0 asFloat extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . != (Object extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . != (^today extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . != ("string" extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . != (NA extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . != (TRUE extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . != (FALSE extendBy: [ ] )) printNL ;

!list <- 1.0,2.0,3.0,-3.0,0.0,10.0 ;

"     List basic:  2,1,1,object,date,string,na,true,false" printNL ;
list do: [ ^self print ; (^self != 2 ) printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self != ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self != "1") printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != 2 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != "1") printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( 2 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( 1.0 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( 1.0 asFloat extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( ^global Object extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( ^today extendBy: [])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( "1" extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( NA extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( TRUE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self != ( FALSE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;

"...  <= " printNL ; 
"     Simple Scalar" printNL ;
(1.0 <= 2) printNL ;
(2.0 <= 1) printNL ;
(1.0 <= 1) printNL ;
(1.0 <= 1.0) printNL ;
(1.0 <= 1.0 asFloat) printNL ;
(1.0 <= Object) printNL ;
(1.0 <= ^today) printNL ;
(1.0 <= "string") printNL ;
(1.0 <= NA) printNL ;
(1.0 <= TRUE) printNL ;
(1.0 <= FALSE) printNL ;

"     Simple1 eB:" printNL ;
(1.0 extendBy: [ ] . <= 2) printNL ;
(2.0 extendBy: [ ] . <= 1) printNL ;
(1.0 extendBy: [ ] . <= 1) printNL ;
(1.0 extendBy: [ ] . <= 1.0) printNL ;
(1.0 extendBy: [ ] . <= 1.0 asFloat) printNL ;
(1.0 extendBy: [ ] . <= Object) printNL ;
(1.0 extendBy: [ ] . <= ^today) printNL ;
(1.0 extendBy: [ ] . <= "string") printNL ;
(1.0 extendBy: [ ] . <= NA) printNL ;
(1.0 extendBy: [ ] . <= TRUE) printNL ;
(1.0 extendBy: [ ] . <= FALSE) printNL ;

"    Scalar double eb: " printNL ;
(1.0 extendBy: [ ] . <= (2 extendBy: [ ] )) printNL ;
(2.0 extendBy: [ ] . <= (1 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . <= (1 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . <= (1.0 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . <= (1.0 asFloat extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . <= (Object extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . <= (^today extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . <= ("string" extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . <= (NA extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . <= (TRUE extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . <= (FALSE extendBy: [ ] )) printNL ;

!list <- 1.0,2.0,3.0,-3.0,0.0,10.0 ;

"     List basic:  2,1,1,object,date,string,na,true,false" printNL ;
list do: [ ^self print ; (^self <= 2 ) printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self <= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self <= "1") printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= 2 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= "1") printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( 2 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( 1.0 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( 1.0 asFloat extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( ^global Object extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( ^today extendBy: [])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( "1" extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( NA extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( TRUE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self <= ( FALSE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;

"...  < " printNL ; 
"     Simple Scalar" printNL ;
(1.0 < 2) printNL ;
(2.0 < 1) printNL ;
(1.0 < 1) printNL ;
(1.0 < 1.0) printNL ;
(1.0 < 1.0 asFloat) printNL ;
(1.0 < Object) printNL ;
(1.0 < ^today) printNL ;
(1.0 < "string") printNL ;
(1.0 < NA) printNL ;
(1.0 < TRUE) printNL ;
(1.0 < FALSE) printNL ;

"     Simple1 eB:" printNL ;
(1.0 extendBy: [ ] . < 2) printNL ;
(2.0 extendBy: [ ] . < 1) printNL ;
(1.0 extendBy: [ ] . < 1) printNL ;
(1.0 extendBy: [ ] . < 1.0) printNL ;
(1.0 extendBy: [ ] . < 1.0 asFloat) printNL ;
(1.0 extendBy: [ ] . < Object) printNL ;
(1.0 extendBy: [ ] . < ^today) printNL ;
(1.0 extendBy: [ ] . < "string") printNL ;
(1.0 extendBy: [ ] . < NA) printNL ;
(1.0 extendBy: [ ] . < TRUE) printNL ;
(1.0 extendBy: [ ] . < FALSE) printNL ;

"    Scalar double eb: " printNL ;
(1.0 extendBy: [ ] . < (2 extendBy: [ ] )) printNL ;
(2.0 extendBy: [ ] . < (1 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . < (1 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . < (1.0 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . < (1.0 asFloat extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . < (Object extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . < (^today extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . < ("string" extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . < (NA extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . < (TRUE extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . < (FALSE extendBy: [ ] )) printNL ;

!list <- 1.0,2.0,3.0,-3.0,0.0,10.0 ;

"     List basic:  2,1,1,object,date,string,na,true,false" printNL ;
list do: [ ^self print ; (^self < 2 ) printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self < ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self < "1") printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < 2 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < "1") printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( 2 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( 1.0 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( 1.0 asFloat extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( ^global Object extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( ^today extendBy: [])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( "1" extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( NA extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( TRUE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self < ( FALSE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;

"...  >= " printNL ; 
"     Simple Scalar" printNL ;
(1.0 >= 2) printNL ;
(2.0 >= 1) printNL ;
(1.0 >= 1) printNL ;
(1.0 >= 1.0) printNL ;
(1.0 >= 1.0 asFloat) printNL ;
(1.0 >= Object) printNL ;
(1.0 >= ^today) printNL ;
(1.0 >= "string") printNL ;
(1.0 >= NA) printNL ;
(1.0 >= TRUE) printNL ;
(1.0 >= FALSE) printNL ;

"     Simple1 eB:" printNL ;
(1.0 extendBy: [ ] . >= 2) printNL ;
(2.0 extendBy: [ ] . >= 1) printNL ;
(1.0 extendBy: [ ] . >= 1) printNL ;
(1.0 extendBy: [ ] . >= 1.0) printNL ;
(1.0 extendBy: [ ] . >= 1.0 asFloat) printNL ;
(1.0 extendBy: [ ] . >= Object) printNL ;
(1.0 extendBy: [ ] . >= ^today) printNL ;
(1.0 extendBy: [ ] . >= "string") printNL ;
(1.0 extendBy: [ ] . >= NA) printNL ;
(1.0 extendBy: [ ] . >= TRUE) printNL ;
(1.0 extendBy: [ ] . >= FALSE) printNL ;

"    Scalar double eb: " printNL ;
(1.0 extendBy: [ ] . >= (2 extendBy: [ ] )) printNL ;
(2.0 extendBy: [ ] . >= (1 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . >= (1 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . >= (1.0 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . >= (1.0 asFloat extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . >= (Object extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . >= (^today extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . >= ("string" extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . >= (NA extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . >= (TRUE extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . >= (FALSE extendBy: [ ] )) printNL ;

!list <- 1.0,2.0,3.0,-3.0,0.0,10.0 ;

"     List basic:  2,1,1,object,date,string,na,true,false" printNL ;
list do: [ ^self print ; (^self >= 2 ) printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self >= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self >= "1") printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= 2 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= "1") printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( 2 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( 1.0 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( 1.0 asFloat extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( ^global Object extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( ^today extendBy: [])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( "1" extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( NA extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( TRUE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self >= ( FALSE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;

"...  > " printNL ; 
"     Simple Scalar" printNL ;
(1.0 > 2) printNL ;
(2.0 > 1) printNL ;
(1.0 > 1) printNL ;
(1.0 > 1.0) printNL ;
(1.0 > 1.0 asFloat) printNL ;
(1.0 > Object) printNL ;
(1.0 > ^today) printNL ;
(1.0 > "string") printNL ;
(1.0 > NA) printNL ;
(1.0 > TRUE) printNL ;
(1.0 > FALSE) printNL ;

"     Simple1 eB:" printNL ;
(1.0 extendBy: [ ] . > 2) printNL ;
(2.0 extendBy: [ ] . > 1) printNL ;
(1.0 extendBy: [ ] . > 1) printNL ;
(1.0 extendBy: [ ] . > 1.0) printNL ;
(1.0 extendBy: [ ] . > 1.0 asFloat) printNL ;
(1.0 extendBy: [ ] . > Object) printNL ;
(1.0 extendBy: [ ] . > ^today) printNL ;
(1.0 extendBy: [ ] . > "string") printNL ;
(1.0 extendBy: [ ] . > NA) printNL ;
(1.0 extendBy: [ ] . > TRUE) printNL ;
(1.0 extendBy: [ ] . > FALSE) printNL ;

"    Scalar double eb: " printNL ;
(1.0 extendBy: [ ] . > (2 extendBy: [ ] )) printNL ;
(2.0 extendBy: [ ] . > (1 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . > (1 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . > (1.0 extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . > (1.0 asFloat extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . > (Object extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . > (^today extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . > ("string" extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . > (NA extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . > (TRUE extendBy: [ ] )) printNL ;
(1.0 extendBy: [ ] . > (FALSE extendBy: [ ] )) printNL ;

!list <- 1.0,2.0,3.0,-3.0,0.0,10.0 ;

"     List basic:  2,1,1,object,date,string,na,true,false" printNL ;
list do: [ ^self print ; (^self > 2 ) printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self > ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self > "1") printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > 2 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > "1") printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  2,1,1,object,date,string,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( 2 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( 1.0 extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( 1.0 asFloat extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( ^global Object extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( ^today extendBy: [])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( "1" extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( NA extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( TRUE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print ; (^self > ( FALSE extendBy:[] )) printNL ] ;
"-" fill: 10 . printNL ;


newPage print ; 
"
**********
* String
**********
" printNL ;

"...  = " printNL ; 
"     Simple Scalar" printNL ;
("xyz" = "string") printNL ;
("xyz" = "xyz") printNL ;
("xyz" = ("xyzabc" take: 3) )printNL ;
("xyz" = 1) printNL ;
("xyz" = 1.0) printNL ;
("xyz" = 1.0 asFloat) printNL ;
("xyz" = Object) printNL ;
("xyz" = ^today) printNL ;
("xyz" = NA) printNL ;
("xyz" = TRUE) printNL ;
("xyz" = FALSE) printNL ;

"     Scalar1 eb" printNL ;
("xyz" extendBy: [ ] .  = "string") printNL ;
("xyz" extendBy: [ ] .  = "xyz") printNL ;
("xyz" extendBy: [ ] .  = ("xyzabc" take: 3)) printNL ;
("xyz" extendBy: [ ] .  = 1) printNL ;
("xyz" extendBy: [ ] .  = 1.0) printNL ;
("xyz" extendBy: [ ] .  = 1.0 asFloat) printNL ;
("xyz" extendBy: [ ] .  = Object) printNL ;
("xyz" extendBy: [ ] .  = ^today) printNL ;
("xyz" extendBy: [ ] .  = NA) printNL ;
("xyz" extendBy: [ ] .  = TRUE) printNL ;
("xyz" extendBy: [ ] .  = FALSE) printNL ;

"    Scalar double eb" printNL ;
("xyz" extendBy: [ ] .  = ("string" extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  = ("xyz" extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  = (("xyzabc" take: 3 . extendBy: [ ]))) printNL ;
("xyz" extendBy: [ ] .  = (1 extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  = (1.0 extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  = (1.0 asFloat extendBy: [])) printNL ;
("xyz" extendBy: [ ] .  = (Object extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  = (^today extendBy: [] )) printNL ;
("xyz" extendBy: [ ] .  = (NA extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  = (TRUE extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  = (FALSE extendBy: [ ] )) printNL ;

!list <- "abc", "xyz", "xyzabc" ;

"     List basic:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self = "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10  ; (^self = "xyz" ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10  ; (^self = ("xyzabc" take:3) ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10  ; (^self = "xyz" ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10  ; (^self = ("xyzabc" take:3) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10  ; (^self = ( "xyz" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10  ; 
        (^self = ("xyzabc" take: 3 . extendBy:[]) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (^today extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;


"...  != " printNL ; 
"     Simple Scalar" printNL ;
("xyz" != "string") printNL ;
("xyz" != "xyz") printNL ;
("xyz" != ("xyzabc" take:3) ) printNL ;
("xyz" != 1) printNL ;
("xyz" != 1.0) printNL ;
("xyz" != 1.0 asFloat) printNL ;
("xyz" != Object) printNL ;
("xyz" != ^today) printNL ;
("xyz" != NA) printNL ;
("xyz" != TRUE) printNL ;
("xyz" != FALSE) printNL ;

"     Scalar1 eb" printNL ;
("xyz" extendBy: [ ] .  != "string") printNL ;
("xyz" extendBy: [ ] .  != "xyz") printNL ;
("xyz" extendBy: [ ] .  != ("xyzabc" take: 3)) printNL ;
("xyz" extendBy: [ ] .  != 1) printNL ;
("xyz" extendBy: [ ] .  != 1.0) printNL ;
("xyz" extendBy: [ ] .  != 1.0 asFloat) printNL ;
("xyz" extendBy: [ ] .  != Object) printNL ;
("xyz" extendBy: [ ] .  != ^today) printNL ;
("xyz" extendBy: [ ] .  != NA) printNL ;
("xyz" extendBy: [ ] .  != TRUE) printNL ;
("xyz" extendBy: [ ] .  != FALSE) printNL ;

"    Scalar double eb" printNL ;
("xyz" extendBy: [ ] .  != ("string" extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  != ("xyz" extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  != (("xyzabc" take: 3 . extendBy: [ ]))) printNL ;
("xyz" extendBy: [ ] .  != (1 extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  != (1.0 extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  != (1.0 asFloat extendBy: [])) printNL ;
("xyz" extendBy: [ ] .  != (Object extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  != (^today extendBy: [] )) printNL ;
("xyz" extendBy: [ ] .  != (NA extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  != (TRUE extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  != (FALSE extendBy: [ ] )) printNL ;

!list <- "abc", "xyz", "xyzabc" ;

"     List basic:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self != "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10  ; (^self != "xyz" ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10  ; (^self != ("xyzabc" take:3) ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10  ; (^self != "xyz" ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10  ; (^self != ("xyzabc" take:3) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10  ; (^self != ( "xyz" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10  ; 
        (^self != ("xyzabc" take: 3 . extendBy:[]) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (^today extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  < " printNL ; 
"     Simple Scalar" printNL ;
("xyz" < "string") printNL ;
("xyz" < "xyz") printNL ;
("xyz" < ("xyzabc" take:3) ) printNL ;
("xyz" < 1) printNL ;
("xyz" < 1.0) printNL ;
("xyz" < 1.0 asFloat) printNL ;
("xyz" < Object) printNL ;
("xyz" < ^today) printNL ;
("xyz" < NA) printNL ;
("xyz" < TRUE) printNL ;
("xyz" < FALSE) printNL ;

"     Scalar1 eb" printNL ;
("xyz" extendBy: [ ] .  < "string") printNL ;
("xyz" extendBy: [ ] .  < "xyz") printNL ;
("xyz" extendBy: [ ] .  < ("xyzabc" take: 3)) printNL ;
("xyz" extendBy: [ ] .  < 1) printNL ;
("xyz" extendBy: [ ] .  < 1.0) printNL ;
("xyz" extendBy: [ ] .  < 1.0 asFloat) printNL ;
("xyz" extendBy: [ ] .  < Object) printNL ;
("xyz" extendBy: [ ] .  < ^today) printNL ;
("xyz" extendBy: [ ] .  < NA) printNL ;
("xyz" extendBy: [ ] .  < TRUE) printNL ;
("xyz" extendBy: [ ] .  < FALSE) printNL ;

"    Scalar double eb" printNL ;
("xyz" extendBy: [ ] .  < ("string" extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  < ("xyz" extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  < (("xyzabc" take: 3 . extendBy: [ ]))) printNL ;
("xyz" extendBy: [ ] .  < (1 extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  < (1.0 extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  < (1.0 asFloat extendBy: [])) printNL ;
("xyz" extendBy: [ ] .  < (Object extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  < (^today extendBy: [] )) printNL ;
("xyz" extendBy: [ ] .  < (NA extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  < (TRUE extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  < (FALSE extendBy: [ ] )) printNL ;

!list <- "abc", "xyz", "xyzabc" ;

"     List basic:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self < "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10  ; (^self < "xyz" ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10  ; (^self < ("xyzabc" take:3) ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10  ; (^self < "xyz" ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10  ; (^self < ("xyzabc" take:3) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10  ; (^self < ( "xyz" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10  ; 
        (^self < ("xyzabc" take: 3 . extendBy:[]) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (^today extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  <= " printNL ; 
"     Simple Scalar" printNL ;
("xyz" <= "string") printNL ;
("xyz" <= "xyz") printNL ;
("xyz" <= ("xyzabc" take:3) ) printNL ;
("xyz" <= 1) printNL ;
("xyz" <= 1.0) printNL ;
("xyz" <= 1.0 asFloat) printNL ;
("xyz" <= Object) printNL ;
("xyz" <= ^today) printNL ;
("xyz" <= NA) printNL ;
("xyz" <= TRUE) printNL ;
("xyz" <= FALSE) printNL ;

"     Scalar1 eb" printNL ;
("xyz" extendBy: [ ] .  <= "string") printNL ;
("xyz" extendBy: [ ] .  <= "xyz") printNL ;
("xyz" extendBy: [ ] .  <= ("xyzabc" take: 3)) printNL ;
("xyz" extendBy: [ ] .  <= 1) printNL ;
("xyz" extendBy: [ ] .  <= 1.0) printNL ;
("xyz" extendBy: [ ] .  <= 1.0 asFloat) printNL ;
("xyz" extendBy: [ ] .  <= Object) printNL ;
("xyz" extendBy: [ ] .  <= ^today) printNL ;
("xyz" extendBy: [ ] .  <= NA) printNL ;
("xyz" extendBy: [ ] .  <= TRUE) printNL ;
("xyz" extendBy: [ ] .  <= FALSE) printNL ;

"    Scalar double eb" printNL ;
("xyz" extendBy: [ ] .  <= ("string" extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  <= ("xyz" extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  <= (("xyzabc" take: 3 . extendBy: [ ]))) printNL ;
("xyz" extendBy: [ ] .  <= (1 extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  <= (1.0 extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  <= (1.0 asFloat extendBy: [])) printNL ;
("xyz" extendBy: [ ] .  <= (Object extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  <= (^today extendBy: [] )) printNL ;
("xyz" extendBy: [ ] .  <= (NA extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  <= (TRUE extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  <= (FALSE extendBy: [ ] )) printNL ;

!list <- "abc", "xyz", "xyzabc" ;

"     List basic:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self <= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10  ; (^self <= "xyz" ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10  ; (^self <= ("xyzabc" take:3) ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10  ; (^self <= "xyz" ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10  ; (^self <= ("xyzabc" take:3) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10  ; (^self <= ( "xyz" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10  ; 
        (^self <= ("xyzabc" take: 3 . extendBy:[]) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (^today extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  > " printNL ; 
"     Simple Scalar" printNL ;
("xyz" > "string") printNL ;
("xyz" > "xyz") printNL ;
("xyz" > ("xyzabc" take:3) ) printNL ;
("xyz" > 1) printNL ;
("xyz" > 1.0) printNL ;
("xyz" > 1.0 asFloat) printNL ;
("xyz" > Object) printNL ;
("xyz" > ^today) printNL ;
("xyz" > NA) printNL ;
("xyz" > TRUE) printNL ;
("xyz" > FALSE) printNL ;

"     Scalar1 eb" printNL ;
("xyz" extendBy: [ ] .  > "string") printNL ;
("xyz" extendBy: [ ] .  > "xyz") printNL ;
("xyz" extendBy: [ ] .  > ("xyzabc" take: 3)) printNL ;
("xyz" extendBy: [ ] .  > 1) printNL ;
("xyz" extendBy: [ ] .  > 1.0) printNL ;
("xyz" extendBy: [ ] .  > 1.0 asFloat) printNL ;
("xyz" extendBy: [ ] .  > Object) printNL ;
("xyz" extendBy: [ ] .  > ^today) printNL ;
("xyz" extendBy: [ ] .  > NA) printNL ;
("xyz" extendBy: [ ] .  > TRUE) printNL ;
("xyz" extendBy: [ ] .  > FALSE) printNL ;

"    Scalar double eb" printNL ;
("xyz" extendBy: [ ] .  > ("string" extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  > ("xyz" extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  > (("xyzabc" take: 3 . extendBy: [ ]))) printNL ;
("xyz" extendBy: [ ] .  > (1 extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  > (1.0 extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  > (1.0 asFloat extendBy: [])) printNL ;
("xyz" extendBy: [ ] .  > (Object extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  > (^today extendBy: [] )) printNL ;
("xyz" extendBy: [ ] .  > (NA extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  > (TRUE extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  > (FALSE extendBy: [ ] )) printNL ;

!list <- "abc", "xyz", "xyzabc" ;

"     List basic:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self > "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10  ; (^self > "xyz" ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10  ; (^self > ("xyzabc" take:3) ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10  ; (^self > "xyz" ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10  ; (^self > ("xyzabc" take:3) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10  ; (^self > ( "xyz" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10  ; 
        (^self > ("xyzabc" take: 3 . extendBy:[]) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (^today extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  >= " printNL ; 
"     Simple Scalar" printNL ;
("xyz" >= "string") printNL ;
("xyz" >= "xyz") printNL ;
("xyz" >= ("xyzabc" take:3) ) printNL ;
("xyz" >= 1) printNL ;
("xyz" >= 1.0) printNL ;
("xyz" >= 1.0 asFloat) printNL ;
("xyz" >= Object) printNL ;
("xyz" >= ^today) printNL ;
("xyz" >= NA) printNL ;
("xyz" >= TRUE) printNL ;
("xyz" >= FALSE) printNL ;

"     Scalar1 eb" printNL ;
("xyz" extendBy: [ ] .  >= "string") printNL ;
("xyz" extendBy: [ ] .  >= "xyz") printNL ;
("xyz" extendBy: [ ] .  >= ("xyzabc" take: 3)) printNL ;
("xyz" extendBy: [ ] .  >= 1) printNL ;
("xyz" extendBy: [ ] .  >= 1.0) printNL ;
("xyz" extendBy: [ ] .  >= 1.0 asFloat) printNL ;
("xyz" extendBy: [ ] .  >= Object) printNL ;
("xyz" extendBy: [ ] .  >= ^today) printNL ;
("xyz" extendBy: [ ] .  >= NA) printNL ;
("xyz" extendBy: [ ] .  >= TRUE) printNL ;
("xyz" extendBy: [ ] .  >= FALSE) printNL ;

"    Scalar double eb" printNL ;
("xyz" extendBy: [ ] .  >= ("string" extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  >= ("xyz" extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  >= (("xyzabc" take: 3 . extendBy: [ ]))) printNL ;
("xyz" extendBy: [ ] .  >= (1 extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  >= (1.0 extendBy: [ ])) printNL ;
("xyz" extendBy: [ ] .  >= (1.0 asFloat extendBy: [])) printNL ;
("xyz" extendBy: [ ] .  >= (Object extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  >= (^today extendBy: [] )) printNL ;
("xyz" extendBy: [ ] .  >= (NA extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  >= (TRUE extendBy: [ ] )) printNL ;
("xyz" extendBy: [ ] .  >= (FALSE extendBy: [ ] )) printNL ;

!list <- "abc", "xyz", "xyzabc" ;

"     List basic:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self >= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10  ; (^self >= "xyz" ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10  ; (^self >= ("xyzabc" take:3) ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10  ; (^self >= "xyz" ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10  ; (^self >= ("xyzabc" take:3) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, xyz, xyz, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10  ; (^self >= ( "xyz" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10  ; 
        (^self >= ("xyzabc" take: 3 . extendBy:[]) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (^today extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;


newPage print ; 
"
**********
* Object
**********
" printNL ;

"...  = " printNL ; 
"     Simple Scalar" printNL ;
(Object = "string") printNL ;
(Object = 1) printNL ;
(Object = 1.0) printNL ;
(Object = 1.0 asFloat) printNL ;
(Object = Object) printNL ;
(Object = ^today) printNL ;
(Object = NA) printNL ;
(Object = TRUE) printNL ;
(Object = FALSE) printNL ;

"     Scalar1 eb" printNL ;
(Object extendBy: [ ] .  = "string") printNL ;
(Object extendBy: [ ] .  = 1) printNL ;
(Object extendBy: [ ] .  = 1.0) printNL ;
(Object extendBy: [ ] .  = 1.0 asFloat) printNL ;
(Object extendBy: [ ] .  = Object) printNL ;
(Object extendBy: [ ] .  = ^today) printNL ;
(Object extendBy: [ ] .  = NA) printNL ;
(Object extendBy: [ ] .  = TRUE) printNL ;
(Object extendBy: [ ] .  = FALSE) printNL ;

"    Scalar double eb" printNL ;
(Object extendBy: [ ] .  = ("string" extendBy: [ ])) printNL ;
(Object extendBy: [ ] .  = (1 extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  = (1.0 extendBy: [ ])) printNL ;
(Object extendBy: [ ] .  = (1.0 asFloat extendBy: [])) printNL ;
(Object extendBy: [ ] .  = (Object extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  = (^today extendBy: [] )) printNL ;
(Object extendBy: [ ] .  = (NA extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  = (TRUE extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  = (FALSE extendBy: [ ] )) printNL ;

!list <- Object asList ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self = "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self = 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (^today extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  != " printNL ; 
"     Simple Scalar" printNL ;
(Object != "string") printNL ;
(Object != 1) printNL ;
(Object != 1.0) printNL ;
(Object != 1.0 asFloat) printNL ;
(Object != Object) printNL ;
(Object != ^today) printNL ;
(Object != NA) printNL ;
(Object != TRUE) printNL ;
(Object != FALSE) printNL ;

"     Scalar1 eb" printNL ;
(Object extendBy: [ ] .  != "string") printNL ;
(Object extendBy: [ ] .  != 1) printNL ;
(Object extendBy: [ ] .  != 1.0) printNL ;
(Object extendBy: [ ] .  != 1.0 asFloat) printNL ;
(Object extendBy: [ ] .  != Object) printNL ;
(Object extendBy: [ ] .  != ^today) printNL ;
(Object extendBy: [ ] .  != NA) printNL ;
(Object extendBy: [ ] .  != TRUE) printNL ;
(Object extendBy: [ ] .  != FALSE) printNL ;

"    Scalar double eb" printNL ;
(Object extendBy: [ ] .  != ("string" extendBy: [ ])) printNL ;
(Object extendBy: [ ] .  != (1 extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  != (1.0 extendBy: [ ])) printNL ;
(Object extendBy: [ ] .  != (1.0 asFloat extendBy: [])) printNL ;
(Object extendBy: [ ] .  != (Object extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  != (^today extendBy: [] )) printNL ;
(Object extendBy: [ ] .  != (NA extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  != (TRUE extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  != (FALSE extendBy: [ ] )) printNL ;

!list <- Object asList ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self != "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self != 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (^today extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  <= " printNL ; 
"     Simple Scalar" printNL ;
(Object <= "string") printNL ;
(Object <= 1) printNL ;
(Object <= 1.0) printNL ;
(Object <= 1.0 asFloat) printNL ;
(Object <= Object) printNL ;
(Object <= ^today) printNL ;
(Object <= NA) printNL ;
(Object <= TRUE) printNL ;
(Object <= FALSE) printNL ;

"     Scalar1 eb" printNL ;
(Object extendBy: [ ] .  <= "string") printNL ;
(Object extendBy: [ ] .  <= 1) printNL ;
(Object extendBy: [ ] .  <= 1.0) printNL ;
(Object extendBy: [ ] .  <= 1.0 asFloat) printNL ;
(Object extendBy: [ ] .  <= Object) printNL ;
(Object extendBy: [ ] .  <= ^today) printNL ;
(Object extendBy: [ ] .  <= NA) printNL ;
(Object extendBy: [ ] .  <= TRUE) printNL ;
(Object extendBy: [ ] .  <= FALSE) printNL ;

"    Scalar double eb" printNL ;
(Object extendBy: [ ] .  <= ("string" extendBy: [ ])) printNL ;
(Object extendBy: [ ] .  <= (1 extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  <= (1.0 extendBy: [ ])) printNL ;
(Object extendBy: [ ] .  <= (1.0 asFloat extendBy: [])) printNL ;
(Object extendBy: [ ] .  <= (Object extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  <= (^today extendBy: [] )) printNL ;
(Object extendBy: [ ] .  <= (NA extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  <= (TRUE extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  <= (FALSE extendBy: [ ] )) printNL ;

!list <- Object asList ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self <= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self <= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (^today extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  < " printNL ; 
"     Simple Scalar" printNL ;
(Object < "string") printNL ;
(Object < 1) printNL ;
(Object < 1.0) printNL ;
(Object < 1.0 asFloat) printNL ;
(Object < Object) printNL ;
(Object < ^today) printNL ;
(Object < NA) printNL ;
(Object < TRUE) printNL ;
(Object < FALSE) printNL ;

"     Scalar1 eb" printNL ;
(Object extendBy: [ ] .  < "string") printNL ;
(Object extendBy: [ ] .  < 1) printNL ;
(Object extendBy: [ ] .  < 1.0) printNL ;
(Object extendBy: [ ] .  < 1.0 asFloat) printNL ;
(Object extendBy: [ ] .  < Object) printNL ;
(Object extendBy: [ ] .  < ^today) printNL ;
(Object extendBy: [ ] .  < NA) printNL ;
(Object extendBy: [ ] .  < TRUE) printNL ;
(Object extendBy: [ ] .  < FALSE) printNL ;

"    Scalar double eb" printNL ;
(Object extendBy: [ ] .  < ("string" extendBy: [ ])) printNL ;
(Object extendBy: [ ] .  < (1 extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  < (1.0 extendBy: [ ])) printNL ;
(Object extendBy: [ ] .  < (1.0 asFloat extendBy: [])) printNL ;
(Object extendBy: [ ] .  < (Object extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  < (^today extendBy: [] )) printNL ;
(Object extendBy: [ ] .  < (NA extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  < (TRUE extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  < (FALSE extendBy: [ ] )) printNL ;

!list <- Object asList ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self < "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self < 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (^today extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  >= " printNL ; 
"     Simple Scalar" printNL ;
(Object >= "string") printNL ;
(Object >= 1) printNL ;
(Object >= 1.0) printNL ;
(Object >= 1.0 asFloat) printNL ;
(Object >= Object) printNL ;
(Object >= ^today) printNL ;
(Object >= NA) printNL ;
(Object >= TRUE) printNL ;
(Object >= FALSE) printNL ;

"     Scalar1 eb" printNL ;
(Object extendBy: [ ] .  >= "string") printNL ;
(Object extendBy: [ ] .  >= 1) printNL ;
(Object extendBy: [ ] .  >= 1.0) printNL ;
(Object extendBy: [ ] .  >= 1.0 asFloat) printNL ;
(Object extendBy: [ ] .  >= Object) printNL ;
(Object extendBy: [ ] .  >= ^today) printNL ;
(Object extendBy: [ ] .  >= NA) printNL ;
(Object extendBy: [ ] .  >= TRUE) printNL ;
(Object extendBy: [ ] .  >= FALSE) printNL ;

"    Scalar double eb" printNL ;
(Object extendBy: [ ] .  >= ("string" extendBy: [ ])) printNL ;
(Object extendBy: [ ] .  >= (1 extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  >= (1.0 extendBy: [ ])) printNL ;
(Object extendBy: [ ] .  >= (1.0 asFloat extendBy: [])) printNL ;
(Object extendBy: [ ] .  >= (Object extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  >= (^today extendBy: [] )) printNL ;
(Object extendBy: [ ] .  >= (NA extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  >= (TRUE extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  >= (FALSE extendBy: [ ] )) printNL ;

!list <- Object asList ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self >= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self >= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (^today extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  > " printNL ; 
"     Simple Scalar" printNL ;
(Object > "string") printNL ;
(Object > 1) printNL ;
(Object > 1.0) printNL ;
(Object > 1.0 asFloat) printNL ;
(Object > Object) printNL ;
(Object > ^today) printNL ;
(Object > NA) printNL ;
(Object > TRUE) printNL ;
(Object > FALSE) printNL ;

"     Scalar1 eb" printNL ;
(Object extendBy: [ ] .  > "string") printNL ;
(Object extendBy: [ ] .  > 1) printNL ;
(Object extendBy: [ ] .  > 1.0) printNL ;
(Object extendBy: [ ] .  > 1.0 asFloat) printNL ;
(Object extendBy: [ ] .  > Object) printNL ;
(Object extendBy: [ ] .  > ^today) printNL ;
(Object extendBy: [ ] .  > NA) printNL ;
(Object extendBy: [ ] .  > TRUE) printNL ;
(Object extendBy: [ ] .  > FALSE) printNL ;

"    Scalar double eb" printNL ;
(Object extendBy: [ ] .  > ("string" extendBy: [ ])) printNL ;
(Object extendBy: [ ] .  > (1 extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  > (1.0 extendBy: [ ])) printNL ;
(Object extendBy: [ ] .  > (1.0 asFloat extendBy: [])) printNL ;
(Object extendBy: [ ] .  > (Object extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  > (^today extendBy: [] )) printNL ;
(Object extendBy: [ ] .  > (NA extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  > (TRUE extendBy: [ ] )) printNL ;
(Object extendBy: [ ] .  > (FALSE extendBy: [ ] )) printNL ;

!list <- Object asList ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self > "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self > 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > ^today) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > ^today) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (^today extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;


newPage print ; 
"
**********
* Date
**********
" printNL ;

920707 evaluate: [ 

"...  = " printNL ; 
"     Simple Scalar" printNL ;
(^date = "string") printNL ;
(^date = 1) printNL ;
(^date = 1.0) printNL ;
(^date = 1.0 asFloat) printNL ;
(^date = ^global Object) printNL ;
(^date = ^today) printNL ;
(^date = NA) printNL ;
(^date = TRUE) printNL ;
(^date = FALSE) printNL ;

"     Scalar1 eb" printNL ;
(^date extendBy: [ ] .  = "string") printNL ;
(^date extendBy: [ ] .  = 1) printNL ;
(^date extendBy: [ ] .  = 1.0) printNL ;
(^date extendBy: [ ] .  = 1.0 asFloat) printNL ;
(^date extendBy: [ ] .  = ^global Object) printNL ;
(^date extendBy: [ ] .  = ^date) printNL ;
(^date extendBy: [ ] .  = NA) printNL ;
(^date extendBy: [ ] .  = TRUE) printNL ;
(^date extendBy: [ ] .  = FALSE) printNL ;

"    Scalar double eb" printNL ;
(^date extendBy: [ ] .  = ("string" extendBy: [ ])) printNL ;
(^date extendBy: [ ] .  = (1 extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  = (1.0 extendBy: [ ])) printNL ;
(^date extendBy: [ ] .  = (1.0 asFloat extendBy: [])) printNL ;
(^date extendBy: [ ] .  = (^global Object extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  = (^date extendBy: [] )) printNL ;
(^date extendBy: [ ] .  = (NA extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  = (TRUE extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  = (FALSE extendBy: [ ] )) printNL ;

!list <- ^date, ^date - 3 days , ^date + 3 days ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self = "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self = 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  != " printNL ; 
"     Simple Scalar" printNL ;
(^date != "string") printNL ;
(^date != 1) printNL ;
(^date != 1.0) printNL ;
(^date != 1.0 asFloat) printNL ;
(^date != ^global Object) printNL ;
(^date != ^date) printNL ;
(^date != NA) printNL ;
(^date != TRUE) printNL ;
(^date != FALSE) printNL ;

"     Scalar1 eb" printNL ;
(^date extendBy: [ ] .  != "string") printNL ;
(^date extendBy: [ ] .  != 1) printNL ;
(^date extendBy: [ ] .  != 1.0) printNL ;
(^date extendBy: [ ] .  != 1.0 asFloat) printNL ;
(^date extendBy: [ ] .  != ^global Object) printNL ;
(^date extendBy: [ ] .  != ^date) printNL ;
(^date extendBy: [ ] .  != NA) printNL ;
(^date extendBy: [ ] .  != TRUE) printNL ;
(^date extendBy: [ ] .  != FALSE) printNL ;

"    Scalar double eb" printNL ;
(^date extendBy: [ ] .  != ("string" extendBy: [ ])) printNL ;
(^date extendBy: [ ] .  != (1 extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  != (1.0 extendBy: [ ])) printNL ;
(^date extendBy: [ ] .  != (1.0 asFloat extendBy: [])) printNL ;
(^date extendBy: [ ] .  != (^global Object extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  != (^date extendBy: [] )) printNL ;
(^date extendBy: [ ] .  != (NA extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  != (TRUE extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  != (FALSE extendBy: [ ] )) printNL ;

!list <- ^date, ^date - 3 days , ^date + 3 days ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self != "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self != 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  <= " printNL ; 
"     Simple Scalar" printNL ;
(^date <= "string") printNL ;
(^date <= 1) printNL ;
(^date <= 1.0) printNL ;
(^date <= 1.0 asFloat) printNL ;
(^date <= ^global Object) printNL ;
(^date <= ^date) printNL ;
(^date <= NA) printNL ;
(^date <= TRUE) printNL ;
(^date <= FALSE) printNL ;

"     Scalar1 eb" printNL ;
(^date extendBy: [ ] .  <= "string") printNL ;
(^date extendBy: [ ] .  <= 1) printNL ;
(^date extendBy: [ ] .  <= 1.0) printNL ;
(^date extendBy: [ ] .  <= 1.0 asFloat) printNL ;
(^date extendBy: [ ] .  <= ^global Object) printNL ;
(^date extendBy: [ ] .  <= ^date) printNL ;
(^date extendBy: [ ] .  <= NA) printNL ;
(^date extendBy: [ ] .  <= TRUE) printNL ;
(^date extendBy: [ ] .  <= FALSE) printNL ;

"    Scalar double eb" printNL ;
(^date extendBy: [ ] .  <= ("string" extendBy: [ ])) printNL ;
(^date extendBy: [ ] .  <= (1 extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  <= (1.0 extendBy: [ ])) printNL ;
(^date extendBy: [ ] .  <= (1.0 asFloat extendBy: [])) printNL ;
(^date extendBy: [ ] .  <= (^global Object extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  <= (^date extendBy: [] )) printNL ;
(^date extendBy: [ ] .  <= (NA extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  <= (TRUE extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  <= (FALSE extendBy: [ ] )) printNL ;

!list <- ^date, ^date - 3 days , ^date + 3 days ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self <= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self <= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  < " printNL ; 
"     Simple Scalar" printNL ;
(^date < "string") printNL ;
(^date < 1) printNL ;
(^date < 1.0) printNL ;
(^date < 1.0 asFloat) printNL ;
(^date < ^global Object) printNL ;
(^date < ^date) printNL ;
(^date < NA) printNL ;
(^date < TRUE) printNL ;
(^date < FALSE) printNL ;

"     Scalar1 eb" printNL ;
(^date extendBy: [ ] .  < "string") printNL ;
(^date extendBy: [ ] .  < 1) printNL ;
(^date extendBy: [ ] .  < 1.0) printNL ;
(^date extendBy: [ ] .  < 1.0 asFloat) printNL ;
(^date extendBy: [ ] .  < ^global Object) printNL ;
(^date extendBy: [ ] .  < ^date) printNL ;
(^date extendBy: [ ] .  < NA) printNL ;
(^date extendBy: [ ] .  < TRUE) printNL ;
(^date extendBy: [ ] .  < FALSE) printNL ;

"    Scalar double eb" printNL ;
(^date extendBy: [ ] .  < ("string" extendBy: [ ])) printNL ;
(^date extendBy: [ ] .  < (1 extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  < (1.0 extendBy: [ ])) printNL ;
(^date extendBy: [ ] .  < (1.0 asFloat extendBy: [])) printNL ;
(^date extendBy: [ ] .  < (^global Object extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  < (^date extendBy: [] )) printNL ;
(^date extendBy: [ ] .  < (NA extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  < (TRUE extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  < (FALSE extendBy: [ ] )) printNL ;

!list <- ^date, ^date - 3 days , ^date + 3 days ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self < "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self < 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  >= " printNL ; 
"     Simple Scalar" printNL ;
(^date >= "string") printNL ;
(^date >= 1) printNL ;
(^date >= 1.0) printNL ;
(^date >= 1.0 asFloat) printNL ;
(^date >= ^global Object) printNL ;
(^date >= ^date) printNL ;
(^date >= NA) printNL ;
(^date >= TRUE) printNL ;
(^date >= FALSE) printNL ;

"     Scalar1 eb" printNL ;
(^date extendBy: [ ] .  >= "string") printNL ;
(^date extendBy: [ ] .  >= 1) printNL ;
(^date extendBy: [ ] .  >= 1.0) printNL ;
(^date extendBy: [ ] .  >= 1.0 asFloat) printNL ;
(^date extendBy: [ ] .  >= ^global Object) printNL ;
(^date extendBy: [ ] .  >= ^date) printNL ;
(^date extendBy: [ ] .  >= NA) printNL ;
(^date extendBy: [ ] .  >= TRUE) printNL ;
(^date extendBy: [ ] .  >= FALSE) printNL ;

"    Scalar double eb" printNL ;
(^date extendBy: [ ] .  >= ("string" extendBy: [ ])) printNL ;
(^date extendBy: [ ] .  >= (1 extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  >= (1.0 extendBy: [ ])) printNL ;
(^date extendBy: [ ] .  >= (1.0 asFloat extendBy: [])) printNL ;
(^date extendBy: [ ] .  >= (^global Object extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  >= (^date extendBy: [] )) printNL ;
(^date extendBy: [ ] .  >= (NA extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  >= (TRUE extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  >= (FALSE extendBy: [ ] )) printNL ;

!list <- ^date, ^date - 3 days , ^date + 3 days ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self >= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self >= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  > " printNL ; 
"     Simple Scalar" printNL ;
(^date > "string") printNL ;
(^date > 1) printNL ;
(^date > 1.0) printNL ;
(^date > 1.0 asFloat) printNL ;
(^date > ^global Object) printNL ;
(^date > ^date) printNL ;
(^date > NA) printNL ;
(^date > TRUE) printNL ;
(^date > FALSE) printNL ;

"     Scalar1 eb" printNL ;
(^date extendBy: [ ] .  > "string") printNL ;
(^date extendBy: [ ] .  > 1) printNL ;
(^date extendBy: [ ] .  > 1.0) printNL ;
(^date extendBy: [ ] .  > 1.0 asFloat) printNL ;
(^date extendBy: [ ] .  > ^global Object) printNL ;
(^date extendBy: [ ] .  > ^date) printNL ;
(^date extendBy: [ ] .  > NA) printNL ;
(^date extendBy: [ ] .  > TRUE) printNL ;
(^date extendBy: [ ] .  > FALSE) printNL ;

"    Scalar double eb" printNL ;
(^date extendBy: [ ] .  > ("string" extendBy: [ ])) printNL ;
(^date extendBy: [ ] .  > (1 extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  > (1.0 extendBy: [ ])) printNL ;
(^date extendBy: [ ] .  > (1.0 asFloat extendBy: [])) printNL ;
(^date extendBy: [ ] .  > (^global Object extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  > (^date extendBy: [] )) printNL ;
(^date extendBy: [ ] .  > (NA extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  > (TRUE extendBy: [ ] )) printNL ;
(^date extendBy: [ ] .  > (FALSE extendBy: [ ] )) printNL ;

!list <- ^date, ^date - 3 days , ^date + 3 days ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self > "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self > 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
] ;



newPage print ; 
"
**********
* NA
**********
" printNL ;

"...  = " printNL ; 
"     Simple Scalar" printNL ;
(NA = "string") printNL ;
(NA = 1) printNL ;
(NA = 1.0) printNL ;
(NA = 1.0 asFloat) printNL ;
(NA = ^global Object) printNL ;
(NA = ^date) printNL ;
(NA = NA) printNL ;
(NA = TRUE) printNL ;
(NA = FALSE) printNL ;

"     Scalar1 eb" printNL ;
(NA extendBy: [ ] .  = "string") printNL ;
(NA extendBy: [ ] .  = 1) printNL ;
(NA extendBy: [ ] .  = 1.0) printNL ;
(NA extendBy: [ ] .  = 1.0 asFloat) printNL ;
(NA extendBy: [ ] .  = ^global Object) printNL ;
(NA extendBy: [ ] .  = ^date) printNL ;
(NA extendBy: [ ] .  = NA) printNL ;
(NA extendBy: [ ] .  = TRUE) printNL ;
(NA extendBy: [ ] .  = FALSE) printNL ;

"    Scalar double eb" printNL ;
(NA extendBy: [ ] .  = ("string" extendBy: [ ])) printNL ;
(NA extendBy: [ ] .  = (1 extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  = (1.0 extendBy: [ ])) printNL ;
(NA extendBy: [ ] .  = (1.0 asFloat extendBy: [])) printNL ;
(NA extendBy: [ ] .  = (^global Object extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  = (^date extendBy: [] )) printNL ;
(NA extendBy: [ ] .  = (NA extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  = (TRUE extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  = (FALSE extendBy: [ ] )) printNL ;

!list <- NA asList ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self = "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self = 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  != " printNL ; 
"     Simple Scalar" printNL ;
(NA != "string") printNL ;
(NA != 1) printNL ;
(NA != 1.0) printNL ;
(NA != 1.0 asFloat) printNL ;
(NA != ^global Object) printNL ;
(NA != ^date) printNL ;
(NA != NA) printNL ;
(NA != TRUE) printNL ;
(NA != FALSE) printNL ;

"     Scalar1 eb" printNL ;
(NA extendBy: [ ] .  != "string") printNL ;
(NA extendBy: [ ] .  != 1) printNL ;
(NA extendBy: [ ] .  != 1.0) printNL ;
(NA extendBy: [ ] .  != 1.0 asFloat) printNL ;
(NA extendBy: [ ] .  != ^global Object) printNL ;
(NA extendBy: [ ] .  != ^date) printNL ;
(NA extendBy: [ ] .  != NA) printNL ;
(NA extendBy: [ ] .  != TRUE) printNL ;
(NA extendBy: [ ] .  != FALSE) printNL ;

"    Scalar double eb" printNL ;
(NA extendBy: [ ] .  != ("string" extendBy: [ ])) printNL ;
(NA extendBy: [ ] .  != (1 extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  != (1.0 extendBy: [ ])) printNL ;
(NA extendBy: [ ] .  != (1.0 asFloat extendBy: [])) printNL ;
(NA extendBy: [ ] .  != (^global Object extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  != (^date extendBy: [] )) printNL ;
(NA extendBy: [ ] .  != (NA extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  != (TRUE extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  != (FALSE extendBy: [ ] )) printNL ;

!list <- NA asList ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self != "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self != 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  <= " printNL ; 
"     Simple Scalar" printNL ;
(NA <= "string") printNL ;
(NA <= 1) printNL ;
(NA <= 1.0) printNL ;
(NA <= 1.0 asFloat) printNL ;
(NA <= ^global Object) printNL ;
(NA <= ^date) printNL ;
(NA <= NA) printNL ;
(NA <= TRUE) printNL ;
(NA <= FALSE) printNL ;

"     Scalar1 eb" printNL ;
(NA extendBy: [ ] .  <= "string") printNL ;
(NA extendBy: [ ] .  <= 1) printNL ;
(NA extendBy: [ ] .  <= 1.0) printNL ;
(NA extendBy: [ ] .  <= 1.0 asFloat) printNL ;
(NA extendBy: [ ] .  <= ^global Object) printNL ;
(NA extendBy: [ ] .  <= ^date) printNL ;
(NA extendBy: [ ] .  <= NA) printNL ;
(NA extendBy: [ ] .  <= TRUE) printNL ;
(NA extendBy: [ ] .  <= FALSE) printNL ;

"    Scalar double eb" printNL ;
(NA extendBy: [ ] .  <= ("string" extendBy: [ ])) printNL ;
(NA extendBy: [ ] .  <= (1 extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  <= (1.0 extendBy: [ ])) printNL ;
(NA extendBy: [ ] .  <= (1.0 asFloat extendBy: [])) printNL ;
(NA extendBy: [ ] .  <= (^global Object extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  <= (^date extendBy: [] )) printNL ;
(NA extendBy: [ ] .  <= (NA extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  <= (TRUE extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  <= (FALSE extendBy: [ ] )) printNL ;

!list <- NA asList ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self <= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self <= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  < " printNL ; 
"     Simple Scalar" printNL ;
(NA < "string") printNL ;
(NA < 1) printNL ;
(NA < 1.0) printNL ;
(NA < 1.0 asFloat) printNL ;
(NA < ^global Object) printNL ;
(NA < ^date) printNL ;
(NA < NA) printNL ;
(NA < TRUE) printNL ;
(NA < FALSE) printNL ;

"     Scalar1 eb" printNL ;
(NA extendBy: [ ] .  < "string") printNL ;
(NA extendBy: [ ] .  < 1) printNL ;
(NA extendBy: [ ] .  < 1.0) printNL ;
(NA extendBy: [ ] .  < 1.0 asFloat) printNL ;
(NA extendBy: [ ] .  < ^global Object) printNL ;
(NA extendBy: [ ] .  < ^date) printNL ;
(NA extendBy: [ ] .  < NA) printNL ;
(NA extendBy: [ ] .  < TRUE) printNL ;
(NA extendBy: [ ] .  < FALSE) printNL ;

"    Scalar double eb" printNL ;
(NA extendBy: [ ] .  < ("string" extendBy: [ ])) printNL ;
(NA extendBy: [ ] .  < (1 extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  < (1.0 extendBy: [ ])) printNL ;
(NA extendBy: [ ] .  < (1.0 asFloat extendBy: [])) printNL ;
(NA extendBy: [ ] .  < (^global Object extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  < (^date extendBy: [] )) printNL ;
(NA extendBy: [ ] .  < (NA extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  < (TRUE extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  < (FALSE extendBy: [ ] )) printNL ;

!list <- NA asList ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self < "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self < 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  >= " printNL ; 
"     Simple Scalar" printNL ;
(NA >= "string") printNL ;
(NA >= 1) printNL ;
(NA >= 1.0) printNL ;
(NA >= 1.0 asFloat) printNL ;
(NA >= ^global Object) printNL ;
(NA >= ^date) printNL ;
(NA >= NA) printNL ;
(NA >= TRUE) printNL ;
(NA >= FALSE) printNL ;

"     Scalar1 eb" printNL ;
(NA extendBy: [ ] .  >= "string") printNL ;
(NA extendBy: [ ] .  >= 1) printNL ;
(NA extendBy: [ ] .  >= 1.0) printNL ;
(NA extendBy: [ ] .  >= 1.0 asFloat) printNL ;
(NA extendBy: [ ] .  >= ^global Object) printNL ;
(NA extendBy: [ ] .  >= ^date) printNL ;
(NA extendBy: [ ] .  >= NA) printNL ;
(NA extendBy: [ ] .  >= TRUE) printNL ;
(NA extendBy: [ ] .  >= FALSE) printNL ;

"    Scalar double eb" printNL ;
(NA extendBy: [ ] .  >= ("string" extendBy: [ ])) printNL ;
(NA extendBy: [ ] .  >= (1 extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  >= (1.0 extendBy: [ ])) printNL ;
(NA extendBy: [ ] .  >= (1.0 asFloat extendBy: [])) printNL ;
(NA extendBy: [ ] .  >= (^global Object extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  >= (^date extendBy: [] )) printNL ;
(NA extendBy: [ ] .  >= (NA extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  >= (TRUE extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  >= (FALSE extendBy: [ ] )) printNL ;

!list <- NA asList ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self >= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self >= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;

"...  > " printNL ; 
"     Simple Scalar" printNL ;
(NA > "string") printNL ;
(NA > 1) printNL ;
(NA > 1.0) printNL ;
(NA > 1.0 asFloat) printNL ;
(NA > ^global Object) printNL ;
(NA > ^date) printNL ;
(NA > NA) printNL ;
(NA > TRUE) printNL ;
(NA > FALSE) printNL ;

"     Scalar1 eb" printNL ;
(NA extendBy: [ ] .  > "string") printNL ;
(NA extendBy: [ ] .  > 1) printNL ;
(NA extendBy: [ ] .  > 1.0) printNL ;
(NA extendBy: [ ] .  > 1.0 asFloat) printNL ;
(NA extendBy: [ ] .  > ^global Object) printNL ;
(NA extendBy: [ ] .  > ^date) printNL ;
(NA extendBy: [ ] .  > NA) printNL ;
(NA extendBy: [ ] .  > TRUE) printNL ;
(NA extendBy: [ ] .  > FALSE) printNL ;

"    Scalar double eb" printNL ;
(NA extendBy: [ ] .  > ("string" extendBy: [ ])) printNL ;
(NA extendBy: [ ] .  > (1 extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  > (1.0 extendBy: [ ])) printNL ;
(NA extendBy: [ ] .  > (1.0 asFloat extendBy: [])) printNL ;
(NA extendBy: [ ] .  > (^global Object extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  > (^date extendBy: [] )) printNL ;
(NA extendBy: [ ] .  > (NA extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  > (TRUE extendBy: [ ] )) printNL ;
(NA extendBy: [ ] .  > (FALSE extendBy: [ ] )) printNL ;

!list <- NA asList ;

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self > "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self > 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;



newPage print ; 
"
**********
* TRUE
**********
" printNL ;

"...  = " printNL ; 
"     Simple Scalar" printNL ;
(TRUE = "string") printNL ;
(TRUE = 1) printNL ;
(TRUE = 1.0) printNL ;
(TRUE = 1.0 asFloat) printNL ;
(TRUE = ^global Object) printNL ;
(TRUE = ^date) printNL ;
(TRUE = NA) printNL ;
(TRUE = TRUE) printNL ;
(TRUE = FALSE) printNL ;

"     Scalar1 eb" printNL ;
(TRUE extendBy: [ ] .  = "string") printNL ;
(TRUE extendBy: [ ] .  = 1) printNL ;
(TRUE extendBy: [ ] .  = 1.0) printNL ;
(TRUE extendBy: [ ] .  = 1.0 asFloat) printNL ;
(TRUE extendBy: [ ] .  = ^global Object) printNL ;
(TRUE extendBy: [ ] .  = ^date) printNL ;
(TRUE extendBy: [ ] .  = NA) printNL ;
(TRUE extendBy: [ ] .  = TRUE) printNL ;
(TRUE extendBy: [ ] .  = FALSE) printNL ;

"    Scalar double eb" printNL ;
(TRUE extendBy: [ ] .  = ("string" extendBy: [ ])) printNL ;
(TRUE extendBy: [ ] .  = (1 extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  = (1.0 extendBy: [ ])) printNL ;
(TRUE extendBy: [ ] .  = (1.0 asFloat extendBy: [])) printNL ;
(TRUE extendBy: [ ] .  = (^global Object extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  = (^date extendBy: [] )) printNL ;
(TRUE extendBy: [ ] .  = (NA extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  = (TRUE extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  = (FALSE extendBy: [ ] )) printNL ;

!list <- TRUE asList ; 

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self = "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self = 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;


"...  != " printNL ; 
"     Simple Scalar" printNL ;
(TRUE != "string") printNL ;
(TRUE != 1) printNL ;
(TRUE != 1.0) printNL ;
(TRUE != 1.0 asFloat) printNL ;
(TRUE != ^global Object) printNL ;
(TRUE != ^date) printNL ;
(TRUE != NA) printNL ;
(TRUE != TRUE) printNL ;
(TRUE != FALSE) printNL ;

"     Scalar1 eb" printNL ;
(TRUE extendBy: [ ] .  != "string") printNL ;
(TRUE extendBy: [ ] .  != 1) printNL ;
(TRUE extendBy: [ ] .  != 1.0) printNL ;
(TRUE extendBy: [ ] .  != 1.0 asFloat) printNL ;
(TRUE extendBy: [ ] .  != ^global Object) printNL ;
(TRUE extendBy: [ ] .  != ^date) printNL ;
(TRUE extendBy: [ ] .  != NA) printNL ;
(TRUE extendBy: [ ] .  != TRUE) printNL ;
(TRUE extendBy: [ ] .  != FALSE) printNL ;

"    Scalar double eb" printNL ;
(TRUE extendBy: [ ] .  != ("string" extendBy: [ ])) printNL ;
(TRUE extendBy: [ ] .  != (1 extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  != (1.0 extendBy: [ ])) printNL ;
(TRUE extendBy: [ ] .  != (1.0 asFloat extendBy: [])) printNL ;
(TRUE extendBy: [ ] .  != (^global Object extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  != (^date extendBy: [] )) printNL ;
(TRUE extendBy: [ ] .  != (NA extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  != (TRUE extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  != (FALSE extendBy: [ ] )) printNL ;

!list <- TRUE asList ; 

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self != "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self != 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;


"...  <= " printNL ; 
"     Simple Scalar" printNL ;
(TRUE <= "string") printNL ;
(TRUE <= 1) printNL ;
(TRUE <= 1.0) printNL ;
(TRUE <= 1.0 asFloat) printNL ;
(TRUE <= ^global Object) printNL ;
(TRUE <= ^date) printNL ;
(TRUE <= NA) printNL ;
(TRUE <= TRUE) printNL ;
(TRUE <= FALSE) printNL ;

"     Scalar1 eb" printNL ;
(TRUE extendBy: [ ] .  <= "string") printNL ;
(TRUE extendBy: [ ] .  <= 1) printNL ;
(TRUE extendBy: [ ] .  <= 1.0) printNL ;
(TRUE extendBy: [ ] .  <= 1.0 asFloat) printNL ;
(TRUE extendBy: [ ] .  <= ^global Object) printNL ;
(TRUE extendBy: [ ] .  <= ^date) printNL ;
(TRUE extendBy: [ ] .  <= NA) printNL ;
(TRUE extendBy: [ ] .  <= TRUE) printNL ;
(TRUE extendBy: [ ] .  <= FALSE) printNL ;

"    Scalar double eb" printNL ;
(TRUE extendBy: [ ] .  <= ("string" extendBy: [ ])) printNL ;
(TRUE extendBy: [ ] .  <= (1 extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  <= (1.0 extendBy: [ ])) printNL ;
(TRUE extendBy: [ ] .  <= (1.0 asFloat extendBy: [])) printNL ;
(TRUE extendBy: [ ] .  <= (^global Object extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  <= (^date extendBy: [] )) printNL ;
(TRUE extendBy: [ ] .  <= (NA extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  <= (TRUE extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  <= (FALSE extendBy: [ ] )) printNL ;

!list <- TRUE asList ; 

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self <= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self <= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;


"...  < " printNL ; 
"     Simple Scalar" printNL ;
(TRUE < "string") printNL ;
(TRUE < 1) printNL ;
(TRUE < 1.0) printNL ;
(TRUE < 1.0 asFloat) printNL ;
(TRUE < ^global Object) printNL ;
(TRUE < ^date) printNL ;
(TRUE < NA) printNL ;
(TRUE < TRUE) printNL ;
(TRUE < FALSE) printNL ;

"     Scalar1 eb" printNL ;
(TRUE extendBy: [ ] .  < "string") printNL ;
(TRUE extendBy: [ ] .  < 1) printNL ;
(TRUE extendBy: [ ] .  < 1.0) printNL ;
(TRUE extendBy: [ ] .  < 1.0 asFloat) printNL ;
(TRUE extendBy: [ ] .  < ^global Object) printNL ;
(TRUE extendBy: [ ] .  < ^date) printNL ;
(TRUE extendBy: [ ] .  < NA) printNL ;
(TRUE extendBy: [ ] .  < TRUE) printNL ;
(TRUE extendBy: [ ] .  < FALSE) printNL ;

"    Scalar double eb" printNL ;
(TRUE extendBy: [ ] .  < ("string" extendBy: [ ])) printNL ;
(TRUE extendBy: [ ] .  < (1 extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  < (1.0 extendBy: [ ])) printNL ;
(TRUE extendBy: [ ] .  < (1.0 asFloat extendBy: [])) printNL ;
(TRUE extendBy: [ ] .  < (^global Object extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  < (^date extendBy: [] )) printNL ;
(TRUE extendBy: [ ] .  < (NA extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  < (TRUE extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  < (FALSE extendBy: [ ] )) printNL ;

!list <- TRUE asList ; 

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self < "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self < 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;


"...  >= " printNL ; 
"     Simple Scalar" printNL ;
(TRUE >= "string") printNL ;
(TRUE >= 1) printNL ;
(TRUE >= 1.0) printNL ;
(TRUE >= 1.0 asFloat) printNL ;
(TRUE >= ^global Object) printNL ;
(TRUE >= ^date) printNL ;
(TRUE >= NA) printNL ;
(TRUE >= TRUE) printNL ;
(TRUE >= FALSE) printNL ;

"     Scalar1 eb" printNL ;
(TRUE extendBy: [ ] .  >= "string") printNL ;
(TRUE extendBy: [ ] .  >= 1) printNL ;
(TRUE extendBy: [ ] .  >= 1.0) printNL ;
(TRUE extendBy: [ ] .  >= 1.0 asFloat) printNL ;
(TRUE extendBy: [ ] .  >= ^global Object) printNL ;
(TRUE extendBy: [ ] .  >= ^date) printNL ;
(TRUE extendBy: [ ] .  >= NA) printNL ;
(TRUE extendBy: [ ] .  >= TRUE) printNL ;
(TRUE extendBy: [ ] .  >= FALSE) printNL ;

"    Scalar double eb" printNL ;
(TRUE extendBy: [ ] .  >= ("string" extendBy: [ ])) printNL ;
(TRUE extendBy: [ ] .  >= (1 extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  >= (1.0 extendBy: [ ])) printNL ;
(TRUE extendBy: [ ] .  >= (1.0 asFloat extendBy: [])) printNL ;
(TRUE extendBy: [ ] .  >= (^global Object extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  >= (^date extendBy: [] )) printNL ;
(TRUE extendBy: [ ] .  >= (NA extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  >= (TRUE extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  >= (FALSE extendBy: [ ] )) printNL ;

!list <- TRUE asList ; 

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self >= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self >= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;


"...  > " printNL ; 
"     Simple Scalar" printNL ;
(TRUE > "string") printNL ;
(TRUE > 1) printNL ;
(TRUE > 1.0) printNL ;
(TRUE > 1.0 asFloat) printNL ;
(TRUE > ^global Object) printNL ;
(TRUE > ^date) printNL ;
(TRUE > NA) printNL ;
(TRUE > TRUE) printNL ;
(TRUE > FALSE) printNL ;

"     Scalar1 eb" printNL ;
(TRUE extendBy: [ ] .  > "string") printNL ;
(TRUE extendBy: [ ] .  > 1) printNL ;
(TRUE extendBy: [ ] .  > 1.0) printNL ;
(TRUE extendBy: [ ] .  > 1.0 asFloat) printNL ;
(TRUE extendBy: [ ] .  > ^global Object) printNL ;
(TRUE extendBy: [ ] .  > ^date) printNL ;
(TRUE extendBy: [ ] .  > NA) printNL ;
(TRUE extendBy: [ ] .  > TRUE) printNL ;
(TRUE extendBy: [ ] .  > FALSE) printNL ;

"    Scalar double eb" printNL ;
(TRUE extendBy: [ ] .  > ("string" extendBy: [ ])) printNL ;
(TRUE extendBy: [ ] .  > (1 extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  > (1.0 extendBy: [ ])) printNL ;
(TRUE extendBy: [ ] .  > (1.0 asFloat extendBy: [])) printNL ;
(TRUE extendBy: [ ] .  > (^global Object extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  > (^date extendBy: [] )) printNL ;
(TRUE extendBy: [ ] .  > (NA extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  > (TRUE extendBy: [ ] )) printNL ;
(TRUE extendBy: [ ] .  > (FALSE extendBy: [ ] )) printNL ;

!list <- TRUE asList ; 

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self > "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self > 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;



newPage print ; 
"
**********
* FALSE
**********
" printNL ;

"...  = " printNL ; 
"     Simple Scalar" printNL ;
(FALSE = "string") printNL ;
(FALSE = 1) printNL ;
(FALSE = 1.0) printNL ;
(FALSE = 1.0 asFloat) printNL ;
(FALSE = ^global Object) printNL ;
(FALSE = ^date) printNL ;
(FALSE = NA) printNL ;
(FALSE = TRUE) printNL ;
(FALSE = FALSE) printNL ;

"     Scalar1 eb" printNL ;
(FALSE extendBy: [ ] .  = "string") printNL ;
(FALSE extendBy: [ ] .  = 1) printNL ;
(FALSE extendBy: [ ] .  = 1.0) printNL ;
(FALSE extendBy: [ ] .  = 1.0 asFloat) printNL ;
(FALSE extendBy: [ ] .  = ^global Object) printNL ;
(FALSE extendBy: [ ] .  = ^date) printNL ;
(FALSE extendBy: [ ] .  = NA) printNL ;
(FALSE extendBy: [ ] .  = TRUE) printNL ;
(FALSE extendBy: [ ] .  = FALSE) printNL ;

"    Scalar double eb" printNL ;
(FALSE extendBy: [ ] .  = ("string" extendBy: [ ])) printNL ;
(FALSE extendBy: [ ] .  = (1 extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  = (1.0 extendBy: [ ])) printNL ;
(FALSE extendBy: [ ] .  = (1.0 asFloat extendBy: [])) printNL ;
(FALSE extendBy: [ ] .  = (^global Object extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  = (^date extendBy: [] )) printNL ;
(FALSE extendBy: [ ] .  = (NA extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  = (TRUE extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  = (FALSE extendBy: [ ] )) printNL ;

!list <- FALSE asList ; 

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self = "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self = 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self = FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self = (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;


"...  != " printNL ; 
"     Simple Scalar" printNL ;
(FALSE != "string") printNL ;
(FALSE != 1) printNL ;
(FALSE != 1.0) printNL ;
(FALSE != 1.0 asFloat) printNL ;
(FALSE != ^global Object) printNL ;
(FALSE != ^date) printNL ;
(FALSE != NA) printNL ;
(FALSE != TRUE) printNL ;
(FALSE != FALSE) printNL ;

"     Scalar1 eb" printNL ;
(FALSE extendBy: [ ] .  != "string") printNL ;
(FALSE extendBy: [ ] .  != 1) printNL ;
(FALSE extendBy: [ ] .  != 1.0) printNL ;
(FALSE extendBy: [ ] .  != 1.0 asFloat) printNL ;
(FALSE extendBy: [ ] .  != ^global Object) printNL ;
(FALSE extendBy: [ ] .  != ^date) printNL ;
(FALSE extendBy: [ ] .  != NA) printNL ;
(FALSE extendBy: [ ] .  != TRUE) printNL ;
(FALSE extendBy: [ ] .  != FALSE) printNL ;

"    Scalar double eb" printNL ;
(FALSE extendBy: [ ] .  != ("string" extendBy: [ ])) printNL ;
(FALSE extendBy: [ ] .  != (1 extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  != (1.0 extendBy: [ ])) printNL ;
(FALSE extendBy: [ ] .  != (1.0 asFloat extendBy: [])) printNL ;
(FALSE extendBy: [ ] .  != (^global Object extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  != (^date extendBy: [] )) printNL ;
(FALSE extendBy: [ ] .  != (NA extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  != (TRUE extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  != (FALSE extendBy: [ ] )) printNL ;

!list <- FALSE asList ; 

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self != "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self != 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self != FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self != (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;


"...  <= " printNL ; 
"     Simple Scalar" printNL ;
(FALSE <= "string") printNL ;
(FALSE <= 1) printNL ;
(FALSE <= 1.0) printNL ;
(FALSE <= 1.0 asFloat) printNL ;
(FALSE <= ^global Object) printNL ;
(FALSE <= ^date) printNL ;
(FALSE <= NA) printNL ;
(FALSE <= TRUE) printNL ;
(FALSE <= FALSE) printNL ;

"     Scalar1 eb" printNL ;
(FALSE extendBy: [ ] .  <= "string") printNL ;
(FALSE extendBy: [ ] .  <= 1) printNL ;
(FALSE extendBy: [ ] .  <= 1.0) printNL ;
(FALSE extendBy: [ ] .  <= 1.0 asFloat) printNL ;
(FALSE extendBy: [ ] .  <= ^global Object) printNL ;
(FALSE extendBy: [ ] .  <= ^date) printNL ;
(FALSE extendBy: [ ] .  <= NA) printNL ;
(FALSE extendBy: [ ] .  <= TRUE) printNL ;
(FALSE extendBy: [ ] .  <= FALSE) printNL ;

"    Scalar double eb" printNL ;
(FALSE extendBy: [ ] .  <= ("string" extendBy: [ ])) printNL ;
(FALSE extendBy: [ ] .  <= (1 extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  <= (1.0 extendBy: [ ])) printNL ;
(FALSE extendBy: [ ] .  <= (1.0 asFloat extendBy: [])) printNL ;
(FALSE extendBy: [ ] .  <= (^global Object extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  <= (^date extendBy: [] )) printNL ;
(FALSE extendBy: [ ] .  <= (NA extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  <= (TRUE extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  <= (FALSE extendBy: [ ] )) printNL ;

!list <- FALSE asList ; 

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self <= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self <= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self <= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self <= (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;


"...  < " printNL ; 
"     Simple Scalar" printNL ;
(FALSE < "string") printNL ;
(FALSE < 1) printNL ;
(FALSE < 1.0) printNL ;
(FALSE < 1.0 asFloat) printNL ;
(FALSE < ^global Object) printNL ;
(FALSE < ^date) printNL ;
(FALSE < NA) printNL ;
(FALSE < TRUE) printNL ;
(FALSE < FALSE) printNL ;

"     Scalar1 eb" printNL ;
(FALSE extendBy: [ ] .  < "string") printNL ;
(FALSE extendBy: [ ] .  < 1) printNL ;
(FALSE extendBy: [ ] .  < 1.0) printNL ;
(FALSE extendBy: [ ] .  < 1.0 asFloat) printNL ;
(FALSE extendBy: [ ] .  < ^global Object) printNL ;
(FALSE extendBy: [ ] .  < ^date) printNL ;
(FALSE extendBy: [ ] .  < NA) printNL ;
(FALSE extendBy: [ ] .  < TRUE) printNL ;
(FALSE extendBy: [ ] .  < FALSE) printNL ;

"    Scalar double eb" printNL ;
(FALSE extendBy: [ ] .  < ("string" extendBy: [ ])) printNL ;
(FALSE extendBy: [ ] .  < (1 extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  < (1.0 extendBy: [ ])) printNL ;
(FALSE extendBy: [ ] .  < (1.0 asFloat extendBy: [])) printNL ;
(FALSE extendBy: [ ] .  < (^global Object extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  < (^date extendBy: [] )) printNL ;
(FALSE extendBy: [ ] .  < (NA extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  < (TRUE extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  < (FALSE extendBy: [ ] )) printNL ;

!list <- FALSE asList ; 

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self < "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self < 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self < FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self < (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;


"...  >= " printNL ; 
"     Simple Scalar" printNL ;
(FALSE >= "string") printNL ;
(FALSE >= 1) printNL ;
(FALSE >= 1.0) printNL ;
(FALSE >= 1.0 asFloat) printNL ;
(FALSE >= ^global Object) printNL ;
(FALSE >= ^date) printNL ;
(FALSE >= NA) printNL ;
(FALSE >= TRUE) printNL ;
(FALSE >= FALSE) printNL ;

"     Scalar1 eb" printNL ;
(FALSE extendBy: [ ] .  >= "string") printNL ;
(FALSE extendBy: [ ] .  >= 1) printNL ;
(FALSE extendBy: [ ] .  >= 1.0) printNL ;
(FALSE extendBy: [ ] .  >= 1.0 asFloat) printNL ;
(FALSE extendBy: [ ] .  >= ^global Object) printNL ;
(FALSE extendBy: [ ] .  >= ^date) printNL ;
(FALSE extendBy: [ ] .  >= NA) printNL ;
(FALSE extendBy: [ ] .  >= TRUE) printNL ;
(FALSE extendBy: [ ] .  >= FALSE) printNL ;

"    Scalar double eb" printNL ;
(FALSE extendBy: [ ] .  >= ("string" extendBy: [ ])) printNL ;
(FALSE extendBy: [ ] .  >= (1 extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  >= (1.0 extendBy: [ ])) printNL ;
(FALSE extendBy: [ ] .  >= (1.0 asFloat extendBy: [])) printNL ;
(FALSE extendBy: [ ] .  >= (^global Object extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  >= (^date extendBy: [] )) printNL ;
(FALSE extendBy: [ ] .  >= (NA extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  >= (TRUE extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  >= (FALSE extendBy: [ ] )) printNL ;

!list <- FALSE asList ; 

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self >= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self >= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self >= FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self >= (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;


"...  > " printNL ; 
"     Simple Scalar" printNL ;
(FALSE > "string") printNL ;
(FALSE > 1) printNL ;
(FALSE > 1.0) printNL ;
(FALSE > 1.0 asFloat) printNL ;
(FALSE > ^global Object) printNL ;
(FALSE > ^date) printNL ;
(FALSE > NA) printNL ;
(FALSE > TRUE) printNL ;
(FALSE > FALSE) printNL ;

"     Scalar1 eb" printNL ;
(FALSE extendBy: [ ] .  > "string") printNL ;
(FALSE extendBy: [ ] .  > 1) printNL ;
(FALSE extendBy: [ ] .  > 1.0) printNL ;
(FALSE extendBy: [ ] .  > 1.0 asFloat) printNL ;
(FALSE extendBy: [ ] .  > ^global Object) printNL ;
(FALSE extendBy: [ ] .  > ^date) printNL ;
(FALSE extendBy: [ ] .  > NA) printNL ;
(FALSE extendBy: [ ] .  > TRUE) printNL ;
(FALSE extendBy: [ ] .  > FALSE) printNL ;

"    Scalar double eb" printNL ;
(FALSE extendBy: [ ] .  > ("string" extendBy: [ ])) printNL ;
(FALSE extendBy: [ ] .  > (1 extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  > (1.0 extendBy: [ ])) printNL ;
(FALSE extendBy: [ ] .  > (1.0 asFloat extendBy: [])) printNL ;
(FALSE extendBy: [ ] .  > (^global Object extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  > (^date extendBy: [] )) printNL ;
(FALSE extendBy: [ ] .  > (NA extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  > (TRUE extendBy: [ ] )) printNL ;
(FALSE extendBy: [ ] .  > (FALSE extendBy: [ ] )) printNL ;

!list <- FALSE asList ; 

"     List basic:  string, 1,1,1,obj,date,na,true,false" printNL ;
list do: [ ^self print: 10 ; (^self > "string") printNL ] ;
"-" fill: 10 . printNL ; 
list do: [ ^self print: 10 ; (^self > 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > ^date) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list do: [ ^self print: 10 ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > "string") printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1.0 ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > 1.0 asFloat ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > ^global Object) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > ^date) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > NA) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > TRUE) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  do: [ ^self print: 10 ; (^self > FALSE) printNL ] ;
"-" fill: 10 . printNL ;

"     List double eb:  string, 1,1,1,obj,date,na,true,false" printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ("string" extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ; 
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1.0 extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( 1.0 asFloat extendBy: [ ] ) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > ( ^global Object extendBy: [ ] )) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (^date extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (NA extendBy:[])) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (TRUE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;
list extendBy: [ ] .  
  do: [ ^self print: 10 ; (^self > (FALSE extendBy: []) ) printNL ] ;
"-" fill: 10 . printNL ;





###########################################################
#		End of tests ...			  #
###########################################################
newLine print; "End of file: relop.S" printNL; "" printNL;


?g

